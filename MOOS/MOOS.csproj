<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<OutputType>Exe</OutputType>
		<TargetFramework>net7.0</TargetFramework>
		<AllowUnsafeBlocks>true</AllowUnsafeBlocks>
		<BaseOutputPath>..\bin</BaseOutputPath>

		<Optimize>true</Optimize>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
		<ErrorOnDuplicatePublishOutputFiles>false</ErrorOnDuplicatePublishOutputFiles>

		<DefineConstants>Kernel;UseAPIC;HasGUI</DefineConstants>

		<IlcSystemModule>MOOS</IlcSystemModule>
		<EntryPointSymbol>Entry</EntryPointSymbol>
		<LinkerSubsystem>NATIVE</LinkerSubsystem>
		<!--Make the code faster!-->
		<IlcOptimizationPreference>Size</IlcOptimizationPreference>
		<!--Following line solves build error after upgrading to MSBuild version 17.5.0+6f08c67f3-->
		<IlcPath>C:\Users\Administrator.SP\.nuget\packages\runtime.win-x64.microsoft.dotnet.ilcompiler\7.0.0-alpha.1.22074.1</IlcPath>

	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'" />

	<!--CustomizeReferences-->
	<Target Name="CustomizeReferences" BeforeTargets="BeforeCompile" AfterTargets="FindReferenceAssembliesForReferences">
		<ItemGroup>
			<ReferencePathWithRefAssemblies Remove="@(ReferencePathWithRefAssemblies)" Condition="%(Filename) != 'Corlib'" />
			<ReferencePath Remove="@(ReferencePath)" />
		</ItemGroup>
		<Exec Command="cmd.exe /c echo CommandLine:$([System.Environment]::CommandLine.Trim())" />
	</Target>

	<ItemGroup>
		<NativeLibrary Include="$(MSBuildStartupDirectory)\x64\Debug\NativeLib.lib" />
		<NativeLibrary Include="$(MSBuildStartupDirectory)\x64\Debug\LibC.lib" />
		<NativeLibrary Include="$(MSBuildStartupDirectory)\x64\Debug\Doom.lib" />
		<!--<RuntimeAssembly Include="MOOS"></RuntimeAssembly>-->
	</ItemGroup>

	<ItemGroup>
		<LinkerArg Include="/fixed /base:0x10000000 /map:Kernel.map" />
	</ItemGroup>

	<!--<ItemGroup>
		<PackageReference Include="Microsoft.DotNet.ILCompiler" Version="7.0.3" />
	</ItemGroup>-->

	<!--Warning: This package is modified(/packages). Using official one may cause it fail to compile!-->
	<ItemGroup>
		<PackageDefinitions Include="MOOS" />
		<PrivateSdkAssemblies Include="MOOS" />
		<FrameworkAssemblies Include="MOOS" />
		<PackageReference Include="Microsoft.DotNet.ILCompiler" Version="7.0.0-alpha.1.22074.1" />
	</ItemGroup>

	<Import Project="..\Kernel\Kernel.projitems" Label="Shared" />

	<Target Name="BuildISO" AfterTargets="Publish">
		<Exec Command="cmd.exe /c echo MSBuildProjectDirectory=$(MSBuildProjectDirectory);NativeOutputPath=$(NativeOutputPath);TargetName=$(TargetName);NativeBinaryExt=$(NativeBinaryExt)"></Exec>
		<!--<Delete Files="$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)"></Delete>-->
		<!--<Exec Command="cmd.exe /c copy D:\Repos\bflata\bin\Debug\net7.0\moos.exe $(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)"></Exec>-->
		<Delete Files="$(MSBuildStartupDirectory)\Tools\grub2\boot\ramdisk.tar"></Delete>
		<Exec Command="&quot;$(MSBuildStartupDirectory)\Tools\7-Zip\7z.exe&quot; a &quot;$(MSBuildStartupDirectory)\Tools\grub2\boot\ramdisk.tar&quot; &quot;$(MSBuildStartupDirectory)\Ramdisk\*"></Exec>
		<Exec WorkingDirectory="$(MSBuildStartupDirectory)\Tools\" Command="&quot;$(MSBuildStartupDirectory)\Tools\nasm.exe&quot; -fbin &quot;$(MSBuildStartupDirectory)\Tools\Trampoline.asm&quot; -o &quot;$(MSBuildStartupDirectory)\Tools\trampoline.o&quot;"></Exec>
		<Exec WorkingDirectory="$(MSBuildStartupDirectory)\Tools\" Command="&quot;$(MSBuildStartupDirectory)\Tools\nasm.exe&quot; -fbin &quot;$(MSBuildStartupDirectory)\Tools\EntryPoint.asm&quot; -o &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)loader.o&quot;"></Exec>
		<Exec Command="cmd.exe /c copy /b &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)loader.o&quot;+&quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName)$(NativeBinaryExt)&quot; &quot;$(MSBuildStartupDirectory)\Tools\grub2\boot\kernel.bin&quot;"></Exec>
		<Delete Files="$(MSBuildProjectDirectory)\$(NativeOutputPath)loader.o"></Delete>
		<Delete Files="$(MSBuildStartupDirectory)\Tools\trampoline.o"></Delete>
		<Exec Command="&quot;$(MSBuildStartupDirectory)\Tools\mkisofs.exe&quot; -relaxed-filenames -J -R -o &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -b boot/grub/i386-pc/eltorito.img -no-emul-boot -boot-load-size 4 -boot-info-table &quot;$(MSBuildStartupDirectory)\Tools\grub2&quot;"></Exec>
	</Target>

	<Target Name="RunQemu" AfterTargets="BuildISO" Condition="$(vm) == 'qemu'">
		<Error Text="Please install QEMU in order to debug MOOS!(do not modify the path) https://www.qemu.org/download/#windows" Condition="!Exists('D:\Program Files\qemu\qemu-system-x86_64.exe')"></Error>
		<Error Text="Please install Intel Hardware Accelerated Execution Manager (HAXM) in order to speed up QEMU https://github.com/intel/haxm/releases" Condition="!Exists('D:\Program Files\Intel\HAXM\IntelHaxm.sys')"></Error>

		<Exec Command="&quot;D:\\Program Files\\qemu\\qemu-system-x86_64.exe&quot; -accel hax -m 1024 -smp 2 -k en-gb -boot d -cdrom &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -d guest_errors -serial stdio -drive id=disk,file=&quot;$(MSBuildStartupDirectory)\Tools\grub2\boot\ramdisk.tar&quot;,if=none -device ahci,id=ahci -device ide-hd,drive=disk,bus=ahci.0 -device AC97 -rtc base=localtime"></Exec>
	</Target>

	<Target Name="RunQemuUSB" AfterTargets="BuildISO" Condition="$(vm) == 'qemuusb'">
		<Error Text="Please install QEMU in order to debug MOOS!(do not modify the path) https://www.qemu.org/download/#windows" Condition="!Exists('D:\Program Files\qemu\qemu-system-x86_64.exe')"></Error>
		<Error Text="Please install Intel Hardware Accelerated Execution Manager (HAXM) in order to speed up QEMU https://github.com/intel/haxm/releases" Condition="!Exists('D:\Program Files\Intel\HAXM\IntelHaxm.sys')"></Error>

		<Exec Command="&quot;D:\\Program Files\\qemu\\qemu-system-x86_64.exe&quot; -accel hax -m 1024 -smp 2 -k en-gb -boot d -cdrom &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -d guest_errors -serial stdio -device AC97 -rtc base=localtime -device usb-ehci,id=ehci -device usb-kbd,bus=ehci.0 -device usb-mouse,bus=ehci.0"></Exec>
	</Target>

	<Target Name="RunQemuNET" AfterTargets="BuildISO" Condition="$(vm) == 'qemutap'">
		<Error Text="Please install QEMU in order to debug MOOS!(do not modify the path) https://www.qemu.org/download/#windows" Condition="!Exists('D:\Program Files\qemu\qemu-system-x86_64.exe')"></Error>
		<Error Text="Please install Intel Hardware Accelerated Execution Manager (HAXM) in order to speed up QEMU https://github.com/intel/haxm/releases" Condition="!Exists('D:\Program Files\Intel\HAXM\IntelHaxm.sys')"></Error>

		<Exec Command="&quot;D:\\Program Files\\qemu\\qemu-system-x86_64.exe&quot; -accel hax -m 1024 -smp 2 -k en-gb -boot d -cdrom &quot;$(MSBuildProjectDirectory)\$(NativeOutputPath)$(TargetName).iso&quot; -d guest_errors -serial stdio -device AC97 -rtc base=localtime -net nic,model=rtl8139 -net tap,ifname=tap"></Exec>
	</Target>

	<Target Name="RunVMware" AfterTargets="BuildISO" Condition="$(vm) == 'vmware'">
		<Error Text="Please install VMWare Player in order to Run MOOS!" Condition="!Exists('D:\Program Files (x86)\VMware\VMware Player\vmplayer.exe')And!Exists('D:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe')"></Error>

		<Exec Condition="Exists('D:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe')" Command="&quot;D:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe&quot; &quot;$(MSBuildStartupDirectory)\Tools\VMWare\MOOS\MOOS.vmx"></Exec>
		<Exec Condition="Exists('D:\Program Files (x86)\VMware\VMware Player\vmplayer.exe')And!Exists('D:\Program Files (x86)\VMware\VMware Workstation\vmplayer.exe')" Command="&quot;D:\Program Files (x86)\VMware\VMware Player\vmplayer.exe&quot; &quot;$(MSBuildStartupDirectory)\Tools\VMWare\MOOS\MOOS.vmx"></Exec>
	</Target>

	<Import Project="..\Corlib\Corlib.projitems" Label="Shared" />

</Project>